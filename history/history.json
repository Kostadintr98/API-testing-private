{"72d887e2f0cfefff0fcd3d68e71d6065":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":1},"items":[{"uid":"893ec57642eeea27","reportUrl":"https://Kostadintr98.github.io/API-testing-private/8//#testresult/893ec57642eeea27","status":"passed","time":{"start":1728226041301,"stop":1728226041570,"duration":269}}]},"ff62e308c528fdf2149920305e15d414":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":1},"items":[{"uid":"b6a38a4f3d91f7b2","reportUrl":"https://Kostadintr98.github.io/API-testing-private/8//#testresult/b6a38a4f3d91f7b2","status":"passed","time":{"start":1728226042625,"stop":1728226042898,"duration":273}}]},"1d81b1490d5426c015edfe6e40db0731":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":1},"items":[{"uid":"9600773632e656d6","reportUrl":"https://Kostadintr98.github.io/API-testing-private/8//#testresult/9600773632e656d6","status":"passed","time":{"start":1728226040274,"stop":1728226040557,"duration":283}}]},"d1b15bbbf3d90b350f291d8229108495":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":1},"items":[{"uid":"2deb52880ef38136","reportUrl":"https://Kostadintr98.github.io/API-testing-private/8//#testresult/2deb52880ef38136","status":"failed","statusDetails":"  Author was not deleted successfully\r\n  Expected: NotFound\r\n  But was:  OK\r\n","time":{"start":1728226040558,"stop":1728226041028,"duration":470}}]},"babfa5a4a2aab7609196a3ffafe4567e":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":1},"items":[{"uid":"cff3a420687ff36c","reportUrl":"https://Kostadintr98.github.io/API-testing-private/8//#testresult/cff3a420687ff36c","status":"passed","time":{"start":1728226042328,"stop":1728226042623,"duration":295}}]},"2ca94a2cb8bf1668cbaf03128f7dc765":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":1},"items":[{"uid":"18c21cd344324571","reportUrl":"https://Kostadintr98.github.io/API-testing-private/8//#testresult/18c21cd344324571","status":"failed","statusDetails":"  Created new author is not successfully saved\r\n  Expected: OK\r\n  But was:  NotFound\r\n","time":{"start":1728226039625,"stop":1728226040249,"duration":624}}]},"ea9a7cad96fde51aae633a49fd1c9011":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":1},"items":[{"uid":"4d7e24c092807fa5","reportUrl":"https://Kostadintr98.github.io/API-testing-private/8//#testresult/4d7e24c092807fa5","status":"failed","statusDetails":"  Created new author is not successfully saved\r\n  Expected: OK\r\n  But was:  NotFound\r\n","time":{"start":1728226043423,"stop":1728226043842,"duration":419}}]},"3f191692c7fb781811435a6a06c9aa27":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":1},"items":[{"uid":"eefd31d37cdb3fed","reportUrl":"https://Kostadintr98.github.io/API-testing-private/8//#testresult/eefd31d37cdb3fed","status":"failed","statusDetails":"  Successfully deleted non-existing author\r\n  Expected: NotFound\r\n  But was:  OK\r\n","time":{"start":1728226041572,"stop":1728226041964,"duration":392}}]},"7f096451fd3bba965cb49931d51cc6ae":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":1},"items":[{"uid":"2be59e1c68f37892","reportUrl":"https://Kostadintr98.github.io/API-testing-private/8//#testresult/2be59e1c68f37892","status":"failed","statusDetails":"  Updated Author BookID does not match the Expected Author BookID.\r\n  Expected string length 2 but was 1. Strings differ at index 0.\r\n  Expected: \"61\"\r\n  But was:  \"7\"\r\n  -----------^\r\n","time":{"start":1728226043844,"stop":1728226044271,"duration":427}}]},"5a3a6757624386017642b2951f65378f":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":1},"items":[{"uid":"4660ab539a3f7d9d","reportUrl":"https://Kostadintr98.github.io/API-testing-private/8//#testresult/4660ab539a3f7d9d","status":"passed","time":{"start":1728226043165,"stop":1728226043422,"duration":257}}]},"1b0178bc72c5f75da7e96ffcf6f8f4ae":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":1},"items":[{"uid":"38b29206e979fe91","reportUrl":"https://Kostadintr98.github.io/API-testing-private/8//#testresult/38b29206e979fe91","status":"passed","time":{"start":1728226041965,"stop":1728226042327,"duration":362}}]},"936c740721e929aad43c3ad5a2af46b4":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":1},"items":[{"uid":"a870a367eae0cda6","reportUrl":"https://Kostadintr98.github.io/API-testing-private/8//#testresult/a870a367eae0cda6","status":"failed","statusDetails":"  Expected: <System.Net.Http.HttpRequestException>\r\n  But was:  <NUnit.Framework.AssertionException:   Tried to delete author with negative ID: -710\r\n  Expected: BadRequest\r\n  But was:  OK\r\n\r\n   at NUnit.Framework.Assert.ReportFailure(String message)\r\n   at NUnit.Framework.Assert.ReportFailure(ConstraintResult result, String message, Object[] args)\r\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression, String message, Object[] args)\r\n   at OnlineBookstore.test.api.steps.BaseSteps.VerifyStatusCode(RestResponse response, HttpStatusCode expectedStatusCode, String errorMessage) in D:\\a\\API-testing-private\\API-testing-private\\test\\api\\steps\\BaseSteps.cs:line 29\r\n   at OnlineBookstore.test.api.tests.AuthorTests.<>c__DisplayClass14_0.<DeleteAuthorByNegativeNumberId>b__0() in D:\\a\\API-testing-private\\API-testing-private\\test\\api\\tests\\AuthorTests.cs:line 271\r\n   at NUnit.Framework.Assert.Throws(IResolveConstraint expression, TestDelegate code, String message, Object[] args)>\r\n","time":{"start":1728226041029,"stop":1728226041300,"duration":271}}]},"e2fda50d7445d7f062aa8d3d53d6ac6a":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":1},"items":[{"uid":"4f910da54679c1b2","reportUrl":"https://Kostadintr98.github.io/API-testing-private/8//#testresult/4f910da54679c1b2","status":"passed","time":{"start":1728226042900,"stop":1728226043163,"duration":263}}]}}